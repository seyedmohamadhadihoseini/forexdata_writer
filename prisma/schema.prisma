generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  account_login              String   @id @db.Text
  account_trade_mode         String?  @db.Text
  account_leverage           Int?
  account_limit_orders       Int?
  account_margin_so_mode     String?  @db.Text
  account_trade_allowed      Boolean?
  account_trade_expert       Boolean?
  account_margin_mode        String?  @db.Text
  account_currency_digits    Int?
  account_fifo_close         Boolean?
  account_hedge_allowed      Boolean?
  account_balance            Decimal? @db.Decimal
  account_credit             Decimal? @db.Decimal
  account_profit             Decimal? @db.Decimal
  account_equity             Decimal? @db.Decimal
  account_margin             Decimal? @db.Decimal
  account_margin_free        Decimal? @db.Decimal
  account_margin_so_call     Decimal? @db.Decimal
  account_margin_so_so       Decimal? @db.Decimal
  account_margin_initial     Decimal? @db.Decimal
  account_margin_maintenance Decimal? @db.Decimal
  account_assets             Decimal? @db.Decimal
  account_liabilities        Decimal? @db.Decimal
  account_commission_blocked Decimal? @db.Decimal
  account_name               String?  @db.Text
  account_server             String?  @db.Text
  account_currency           String?  @db.Text
  account_company            String?  @db.Text
  symbol                     symbol[]
}

model symbol {
  symbol_name                  String        @db.Text
  symbol_subscription_delay    Boolean?
  symbol_sector                String?       @db.Text
  symbol_industry              String?       @db.Text
  symbol_custom                Boolean?
  symbol_chart_mode            String?       @db.Text
  symbol_digits                Int?
  symbol_spread_float          Boolean?
  symbol_ticks_bookdepth       Int?
  symbol_trade_calc_mode       String?       @db.Text
  symbol_trade_mode            String?       @db.Text
  symbol_trade_stops_level     Int?
  symbol_trade_freeze_level    Int?
  symbol_trade_exemode         String?       @db.Text
  symbol_swap_mode             String?       @db.Text
  symbol_swap_rollover3days    String?       @db.Text
  symbol_margin_hedged_use_leg Boolean?
  symbol_expiration_mode       Int?
  symbol_filling_mode          Int?
  symbol_order_mode            Int?
  symbol_order_gtc_mode        String?       @db.Text
  symbol_option_mode           String?       @db.Text
  symbol_option_right          String?       @db.Text
  symbol_point                 Decimal?      @db.Decimal
  symbol_trade_tick_size       Decimal?      @db.Decimal
  symbol_trade_contract_size   Decimal?      @db.Decimal
  symbol_volume_min            Decimal?      @db.Decimal
  symbol_volume_max            Decimal?      @db.Decimal
  symbol_volume_step           Decimal?      @db.Decimal
  symbol_volume_limit          Decimal?      @db.Decimal
  symbol_margin_initial        Decimal?      @db.Decimal
  symbol_margin_maintenance    Decimal?      @db.Decimal
  symbol_margin_hedged         Decimal?      @db.Decimal
  symbol_basis                 String?       @db.Text
  symbol_category              String?       @db.Text
  symbol_country               String?       @db.Text
  symbol_sector_name           String?       @db.Text
  symbol_industry_name         String?       @db.Text
  symbol_currency_base         String?       @db.Text
  symbol_currency_profit       String?       @db.Text
  symbol_currency_margin       String?       @db.Text
  symbol_bank                  String?       @db.Text
  symbol_description           String?       @db.Text
  symbol_exchange              String?       @db.Text
  symbol_formula               String?       @db.Text
  symbol_isin                  String?       @db.Text
  symbol_page                  String?       @db.Text
  symbol_path                  String?       @db.Text
  account_login                String
  account                      account       @relation(fields: [account_login], references: [account_login], onDelete: Cascade)
  symbolprice                  symbolprice[]

  @@id([symbol_name, account_login])
}

model symbolprice {
  id                                String    @id @default(uuid())
  symbol_time                       DateTime  @db.Timestamptz(6)
  symbol_name                       String    @db.Text
  symbol_background_color           String?   @db.Text
  symbol_exist                      Boolean?
  symbol_select                     Boolean?
  symbol_visible                    Boolean?
  symbol_session_deals              Int?
  symbol_session_buy_orders         Int?
  symbol_session_sell_orders        Int?
  symbol_volume                     Int?
  symbol_volumehigh                 Int?
  symbol_volumelow                  Int?
  symbol_time_msc                   DateTime? @db.Timestamptz(6)
  symbol_spread                     Int?
  symbol_expiration_time            DateTime? @db.Timestamptz(6)
  symbol_bid                        Decimal?  @db.Decimal
  symbol_bidhigh                    Decimal?  @db.Decimal
  symbol_bidlow                     Decimal?  @db.Decimal
  symbol_ask                        Decimal?  @db.Decimal
  symbol_askhigh                    Decimal?  @db.Decimal
  symbol_asklow                     Decimal?  @db.Decimal
  symbol_last                       Decimal?  @db.Decimal
  symbol_lasthigh                   Decimal?  @db.Decimal
  symbol_lastlow                    Decimal?  @db.Decimal
  symbol_volume_real                Decimal?  @db.Decimal
  symbol_volumehigh_real            Decimal?  @db.Decimal
  symbol_volumelow_real             Decimal?  @db.Decimal
  symbol_option_strike              Decimal?  @db.Decimal
  symbol_trade_tick_value           Decimal?  @db.Decimal
  symbol_trade_tick_value_profit    Decimal?  @db.Decimal
  symbol_trade_tick_value_loss      Decimal?  @db.Decimal
  symbol_trade_accrued_interest     Decimal?  @db.Decimal
  symbol_trade_face_value           Decimal?  @db.Decimal
  symbol_trade_liquidity_rate       Decimal?  @db.Decimal
  symbol_swap_long                  Decimal?  @db.Decimal
  symbol_swap_short                 Decimal?  @db.Decimal
  symbol_swap_sunday                Decimal?  @db.Decimal
  symbol_swap_monday                Decimal?  @db.Decimal
  symbol_swap_tuesday               Decimal?  @db.Decimal
  symbol_swap_wednesday             Decimal?  @db.Decimal
  symbol_swap_thursday              Decimal?  @db.Decimal
  symbol_swap_friday                Decimal?  @db.Decimal
  symbol_swap_saturday              Decimal?  @db.Decimal
  symbol_session_volume             Decimal?  @db.Decimal
  symbol_session_turnover           Decimal?  @db.Decimal
  symbol_session_interest           Decimal?  @db.Decimal
  symbol_session_buy_orders_volume  Decimal?  @db.Decimal
  symbol_session_sell_orders_volume Decimal?  @db.Decimal
  symbol_session_open               Decimal?  @db.Decimal
  symbol_session_close              Decimal?  @db.Decimal
  symbol_session_aw                 Decimal?  @db.Decimal
  symbol_session_price_settlement   Decimal?  @db.Decimal
  symbol_session_price_limit_min    Decimal?  @db.Decimal
  symbol_session_price_limit_max    Decimal?  @db.Decimal
  symbol_price_change               Decimal?  @db.Decimal
  symbol_price_volatility           Decimal?  @db.Decimal
  symbol_price_theoretical          Decimal?  @db.Decimal
  symbol_price_delta                Decimal?  @db.Decimal
  symbol_price_theta                Decimal?  @db.Decimal
  symbol_price_gamma                Decimal?  @db.Decimal
  symbol_price_vega                 Decimal?  @db.Decimal
  symbol_price_rho                  Decimal?  @db.Decimal
  symbol_price_omega                Decimal?  @db.Decimal
  symbol_price_sensitivity          Decimal?  @db.Decimal
  account_login                     String
  symbol                            symbol    @relation(fields: [symbol_name, account_login], references: [symbol_name, account_login], onDelete: Cascade, onUpdate: Cascade)
}
